ALTER SESSION SET NLS_DATE_FORMAT='YYYY-MM-DD';

CREATE OR REPLACE FUNCTION CalculateExceedDuration (
    p_departureTime IN TIMESTAMP,
    p_arrivalTime IN TIMESTAMP,
    p_max_duration IN NUMBER DEFAULT 840 -- Max flight duration in minutes (14 hours)
) RETURN VARCHAR
IS
    v_flightDuration INTERVAL DAY TO SECOND;
    v_exceed_minutes INTEGER;
    v_exceed_hours INTEGER;
    v_exceed_remaining_minutes INTEGER;
    v_result VARCHAR(100);
    v_adjustedArrivalTime TIMESTAMP;
BEGIN
    -- Adjust the arrival time if it is on the next day
    v_adjustedArrivalTime := p_arrivalTime;
    IF v_adjustedArrivalTime < p_departureTime THEN
        v_adjustedArrivalTime := v_adjustedArrivalTime + INTERVAL '1' DAY;
    END IF;

    -- Calculate the flight duration
    v_flightDuration := v_adjustedArrivalTime - p_departureTime;

    -- Convert flight duration to minutes
    v_exceed_minutes := (EXTRACT(DAY FROM v_flightDuration) * 24 * 60) + 
                        (EXTRACT(HOUR FROM v_flightDuration) * 60) + 
                        EXTRACT(MINUTE FROM v_flightDuration) - p_max_duration;

    -- Check if the flight exceeds the maximum duration
    IF v_exceed_minutes > 0 THEN
        v_exceed_hours := FLOOR(v_exceed_minutes / 60);
        v_exceed_remaining_minutes := MOD(v_exceed_minutes, 60);

        -- Format the result as a message
        v_result := 'Flight duration exceeds the 14-hour limit by ' || v_exceed_hours || 
                    ' hours and ' || v_exceed_remaining_minutes || ' minutes.';
    ELSE
        v_result := 'Flight duration is within the 14-hour limit.';
    END IF;

    RETURN v_result;
END CalculateExceedDuration;
/

CREATE OR REPLACE TRIGGER trg_no_overlapping_flights
BEFORE INSERT ON Flight
FOR EACH ROW
DECLARE
  v_conflict_count INTEGER;
  v_max_flight_duration CONSTANT INTEGER := 840; -- Max flight duration (14 hours) in minutes
  v_duration_message VARCHAR(100); -- To store the result of the function call
BEGIN
  -- Check if the origin and destination are different
  IF :NEW.origin = :NEW.destination THEN
    RAISE_APPLICATION_ERROR(-20005, 'Origin and destination must be different.');
  END IF;

  -- Call the CalculateExceedDuration function to check the flight duration
  v_duration_message := CalculateExceedDuration(
    TO_TIMESTAMP(:NEW.flightDate || ' ' || :NEW.departureTime, 'YYYY-MM-DD HH24:MI'),
    TO_TIMESTAMP(:NEW.flightDate || ' ' || :NEW.arrivalTime, 'YYYY-MM-DD HH24:MI')
  );
  
  -- If the message indicates that the flight exceeds the 14-hour limit, raise an error
  IF v_duration_message LIKE 'Flight duration exceeds%' THEN
    RAISE_APPLICATION_ERROR(-20006, v_duration_message);
  END IF;

  -- Check for overlapping flights for the same airplane
  SELECT COUNT(*)
  INTO v_conflict_count
  FROM Flight
  WHERE airplaneId = :NEW.airplaneId
    AND flightDate = :NEW.flightDate
    AND (:NEW.departureTime < arrivalTime AND :NEW.arrivalTime > departureTime);

  -- If conflict is found, raise an error
  IF v_conflict_count > 0 THEN
    RAISE_APPLICATION_ERROR(-20003, 'Airplane cannot be scheduled for overlapping flights.');
  END IF;

  -- Optional: Log details of the new flight being inserted
  DBMS_OUTPUT.PUT_LINE('Flight scheduled for Airplane ID: ' || :NEW.airplaneId || ', Departure: ' || :NEW.departureTime || ', Arrival: ' || :NEW.arrivalTime);
END;
/
