SET linesize 190
SET pagesize 100
set serveroutput ON
ALTER SESSION SET NLS_DATE_FORMAT='YYYY-MM-DD';

CREATE OR REPLACE FUNCTION calc_canc_percentage (
    totalBookings IN NUMBER,
    totalCancellations IN NUMBER
) RETURN NUMBER IS
    percentage NUMBER;
BEGIN
    IF totalBookings = 0 THEN
        percentage := 0;
    ELSE
        percentage := (totalCancellations / totalBookings) * 100;
    END IF;
    RETURN ROUND(percentage, 2);
END;
/

CREATE OR REPLACE PROCEDURE prc_member_loyalty_report (
    v_startDate IN DATE,
    v_endDate IN DATE
) IS
    -- Cursor to fetch members who have made bookings
    CURSOR member_cursor IS
        SELECT DISTINCT m.memberId, m.memberName
        FROM Member m
        JOIN Booking b ON m.memberId = b.memberId
        WHERE b.bookingDate BETWEEN v_startDate AND v_endDate
        ORDER BY m.memberId;
    
    -- Cursor to fetch bookings for a given member within the date range
    CURSOR booking_cursor(p_memberId VARCHAR) IS
        SELECT bookingId, status, bookingDate
        FROM Booking
        WHERE memberId = p_memberId
        AND bookingDate BETWEEN v_startDate AND v_endDate;
    
    -- Cursor to fetch cancellations for a given booking within the date range
    CURSOR cancellation_cursor(p_bookingId VARCHAR) IS
        SELECT cancellationId, cancellationDate, refundAmount
        FROM Cancellation
        WHERE bookingId = p_bookingId
        AND cancellationDate BETWEEN v_startDate AND v_endDate;

    -- Cursor to fetch top 5 members with the highest percentage of cancellations within the date range
    CURSOR top5Cursor IS
    SELECT * FROM (
        SELECT m.memberId, m.memberName, 
               COUNT(c.cancellationId) AS totalCancellations,
               COUNT(b.bookingId) AS totalBookings,
               CASE 
                   WHEN COUNT(b.bookingId) = 0 THEN 0
                   ELSE ROUND(COUNT(c.cancellationId) / COUNT(b.bookingId) * 100, 2) 
               END AS cancellationPercentage
        FROM Member m
        JOIN Booking b ON m.memberId = b.memberId
        LEFT JOIN Cancellation c ON b.bookingId = c.bookingId
        WHERE b.bookingDate BETWEEN v_startDate AND v_endDate
        GROUP BY m.memberId, m.memberName
        ORDER BY cancellationPercentage DESC
    )
    WHERE ROWNUM <= 5;
    
    -- Variables to hold cursor data
    v_memberId Member.memberId%TYPE;
    v_memberName Member.memberName%TYPE;
    v_bookingId Booking.bookingId%TYPE;
    v_bookingStatus Booking.status%TYPE;
    v_bookingDate Booking.bookingDate%TYPE;
    v_cancellationId Cancellation.cancellationId%TYPE;
    v_cancellationDate Cancellation.cancellationDate%TYPE;
    v_refundAmount Cancellation.refundAmount%TYPE;

    v_bookingCount NUMBER := 0;
    v_cancellationCount NUMBER := 0;
    v_cancellationPercentage NUMBER := 0;

BEGIN
    -- Report Heading
    DBMS_OUTPUT.PUT_LINE(LPAD('=', 108, '='));
    DBMS_OUTPUT.PUT_LINE('					Member Loyalty Report');
    DBMS_OUTPUT.PUT_LINE(LPAD('-', 108, '-'));
    DBMS_OUTPUT.PUT_LINE('				Period: ' || TO_CHAR(v_startDate, 'DD-MON-YYYY') || ' to ' || TO_CHAR(v_endDate, 'DD-MON-YYYY'));
    DBMS_OUTPUT.PUT_LINE(LPAD('=', 108, '='));
    DBMS_OUTPUT.PUT_LINE(LPAD('-', 108, '-'));
    DBMS_OUTPUT.PUT_LINE(RPAD('Member ID', 15) || ' | ' || 
                         RPAD('Member Name', 30) || ' | ' || 
                         RPAD('Total Bookings', 15) || ' | ' || 
                         RPAD('Total Cancellations', 20) || ' | ' ||
                         RPAD('Cancellation %', 15));
    DBMS_OUTPUT.PUT_LINE(LPAD('-', 108, '-'));

    -- Loop through members
    OPEN member_cursor;
    LOOP
        FETCH member_cursor INTO v_memberId, v_memberName;
        EXIT WHEN member_cursor%NOTFOUND;

        -- Initialize booking and cancellation count
        v_bookingCount := 0;
        v_cancellationCount := 0;

        -- Loop through bookings for the member within the date range
        OPEN booking_cursor(v_memberId);
        LOOP
            FETCH booking_cursor INTO v_bookingId, v_bookingStatus, v_bookingDate;
            EXIT WHEN booking_cursor%NOTFOUND;

            v_bookingCount := v_bookingCount + 1;

            -- Check for cancellations for each booking within the date range
            OPEN cancellation_cursor(v_bookingId);
            LOOP
                FETCH cancellation_cursor INTO v_cancellationId, v_cancellationDate, v_refundAmount;
                EXIT WHEN cancellation_cursor%NOTFOUND;

                v_cancellationCount := v_cancellationCount + 1;
            END LOOP;
            CLOSE cancellation_cursor;
        END LOOP;
        CLOSE booking_cursor;

        -- Calculate cancellation percentage using function
        v_cancellationPercentage := calc_canc_percentage(v_bookingCount, v_cancellationCount);

        -- Output member data
        DBMS_OUTPUT.PUT_LINE(RPAD(v_memberId, 15) || ' | ' || 
                             RPAD(v_memberName, 30) || ' | ' || 
                             RPAD(TO_CHAR(v_bookingCount), 15) || ' | ' || 
                             RPAD(TO_CHAR(v_cancellationCount), 20) || ' | ' ||
                             RPAD(TO_CHAR(v_cancellationPercentage, '999.99'), 15));
    END LOOP;
    CLOSE member_cursor;

    DBMS_OUTPUT.PUT_LINE(LPAD('=', 108, '='));

    -- Top 5 Members with the Highest Cancellation Percentage
    DBMS_OUTPUT.PUT_LINE(LPAD('=', 83, '='));
    DBMS_OUTPUT.PUT_LINE('	Top 5 Members with the Highest Cancellation Percentage');
    DBMS_OUTPUT.PUT_LINE(LPAD('=', 83, '='));
    DBMS_OUTPUT.PUT_LINE(RPAD('Member ID', 15) || ' | ' || 
                         RPAD('Member Name', 30) || ' | ' || 
                         RPAD('Cancellation %', 15));
    DBMS_OUTPUT.PUT_LINE(LPAD('-', 83, '-'));

    -- Fetch and display the top 5 members with the highest cancellation percentage within the date range
    OPEN top5Cursor;
    LOOP
        FETCH top5Cursor INTO v_memberId, v_memberName, v_cancellationCount, v_bookingCount, v_cancellationPercentage;
        EXIT WHEN top5Cursor%NOTFOUND;

        DBMS_OUTPUT.PUT_LINE(
            RPAD(v_memberId, 15) || ' | ' || 
            RPAD(v_memberName, 30) || ' | ' || 
            RPAD(TO_CHAR(v_cancellationPercentage, '999.99'), 15)
        );
    END LOOP;
    CLOSE top5Cursor;

    DBMS_OUTPUT.PUT_LINE(LPAD('=', 83, '='));
    DBMS_OUTPUT.PUT_LINE(LPAD('=', 34, '=') || ' End of Report ' || LPAD('=', 34, '='));

END;
/

EXEC prc_member_loyalty_report('2022-01-01', '2024-12-31');